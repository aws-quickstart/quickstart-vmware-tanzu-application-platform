#@ load("@ytt:data", "data")
---
profile: view
ceip_policy_disclosed: true # Installation fails if this is set to 'false'

shared:
  ingress_domain: #@ "view.{}".format(data.values.dns.domain_name)

learningcenter:
  ingressDomain: #@ "learning-center.view.{}".format(data.values.dns.domain_name)

tap_gui:
  ingressEnabled: true
  ingressDomain: #@ "view.{}".format(data.values.dns.domain_name)
  service_type: ClusterIP # NodePort for distributions that don't support LoadBalancer
  app_config:
    proxy:
      /metadata-store:
        target: https://metadata-store-app.metadata-store:8443/api/v1
        changeOrigin: true
        secure: false
        headers:
          Authorization: #@ "{}".format(data.values.metadata_store.access_token)
          X-Custom-Source: project-star
    supplyChain:
      enablePlugin: true
    auth:
      allowGuestAccess: true
    backend:
      baseUrl: #@ "https://tap-gui.view.{}".format(data.values.dns.domain_name)
      cors:
        origin: #@ "https://tap-gui.view.{}".format(data.values.dns.domain_name)
    app:
      baseUrl: #@ "https://tap-gui.view.{}".format(data.values.dns.domain_name)
    kubernetes:
      serviceLocatorMethod:
        type: "multiTenant"
      clusterLocatorMethods:
        - type: "config"
          clusters:
            #@ if '{}{}'.format(data.values.cluster.run.url, data.values.cluster.run.token) != "":
            #! Cluster: Run
            - url: #@ data.values.cluster.run.url
              name: #@ "{}-run".format(data.values.cluster.name)
              authProvider: serviceAccount
              skipTLSVerify: true
              skipMetricsLookup: true
              serviceAccountToken: #@ data.values.cluster.run.token
            #@ end

            #@ if '{}{}'.format(data.values.cluster.build.url, data.values.cluster.build.token) != "":
            #! Cluster: Build
            - url: #@ data.values.cluster.build.url
              name: #@ "{}-build".format(data.values.cluster.name)
              authProvider: serviceAccount
              skipTLSVerify: true
              skipMetricsLookup: true
              serviceAccountToken: #@ data.values.cluster.build.token
            #@ end

            #@ if '{}{}'.format(data.values.cluster.iterate.url, data.values.cluster.iterate.token) != "":
            #! Cluster: Iterate
            - url: #@ data.values.cluster.iterate.url
              name: #@ "{}-iterate".format(data.values.cluster.name)
              authProvider: serviceAccount
              skipTLSVerify: true
              skipMetricsLookup: true
              serviceAccountToken: #@ data.values.cluster.iterate.token
            #@ end
metadata_store:
  app_service_type: LoadBalancer
  ns_for_export_app_cert: #@ data.values.repositories.workload.namespace

contour:
  infrastructure_provider: aws
  envoy:
    service:
      aws:
        LBType: nlb

appliveview:
  ingressEnabled: true
  ingressDomain: #@ "appliveview.view.{}".format(data.values.dns.domain_name)
