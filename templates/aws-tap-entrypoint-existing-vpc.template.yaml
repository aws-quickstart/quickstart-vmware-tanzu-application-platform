AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation template for deploying VMware Tanzu Application Platform
  (TAP) on Amazon EKS in an existing VPC.
  **WARNING** This template creates AWS resources. You will be billed for the
  AWS resources used if you create a stack from this template. (qs-1t1t2pssu)
Metadata:
  LICENSE: Apache License, Version 2.0
  QuickStartDocumentation:
    EntrypointName: Launch into an existing VPC
    Order: 2
  SentenceCaseExclude:
    - Application
    - Bootstrap
    - Build
    - Cluster
    - Essentials
    - Network
    - Platform
    - Service
    - Stacks
    - Tanzu
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VMware Tanzu Network configuration
        Parameters:
          - AcceptEULAs
          - AcceptCEIP
          - TanzuNetUsername
          - TanzuNetPassword
          - TanzuNetApiToken
          - TanzuNetRelocateImages
      - Label:
          default: VMware Tanzu Application Platform configuration
        Parameters:
          - TAPVersion
          - TAPDomainName
      - Label:
          default: Sample app configuration
        Parameters:
          - SampleAppName
      - Label:
          default: Basic configuration
        Parameters:
          - KeyPairName
          - RemoteAccessCidr
      - Label:
          default: VPC network configuration
        Parameters:
          - VpcId
          - PrivateSubnet1Id
          - PrivateSubnet2Id
          - PrivateSubnet3Id
          - PublicSubnet1Id
      - Label:
          default: Amazon EKS configuration
        Parameters:
          - EKSClusterName
          - KubernetesVersion
          - NodeInstanceType
          - NodeVolumeSize
          - NumberOfNodes
          - MaxNumberOfNodes
      - Label:
          default: Linux bastion host / bootstrap instance configuration
        Parameters:
          - LinuxBastionOS
          - LinuxBastionSshPort
      - Label:
          default: AWS Quick Start S3 bucket configuration
        Parameters:
          - QSS3BucketName
          - QSS3BucketRegion
          - QSS3KeyPrefix
    ParameterLabels:
      AcceptEULAs:
        default: Have all applicable VMware Tanzu Network EULAs been accepted?
      AcceptCEIP:
        default: Have you read and accept the VMware CEIP policy?
      KeyPairName:
        default: EC2 key pair name
      VpcId:
        default: VPC ID
      PrivateSubnet1Id:
        default: Private subnet 1 ID
      PrivateSubnet2Id:
        default: Private subnet 2 ID
      PrivateSubnet3Id:
        default: Private subnet 3 ID
      PublicSubnet1Id:
        default: Public subnet 1 ID
      RemoteAccessCidr:
        default: Remote access CIDR
      LinuxBastionOS:
        default: OS
      LinuxBastionSshPort:
        default: SSH port
      TAPDomainName:
        default: Domain name
      EKSClusterName:
        default: EKS cluster name
      KubernetesVersion:
        default: Kubernetes version
      NodeInstanceType:
        default: Instance type
      NodeVolumeSize:
        default: Volume size
      NumberOfNodes:
        default: Number of nodes
      MaxNumberOfNodes:
        default: Maximum number of nodes
      TanzuNetUsername:
        default: Username
      TanzuNetPassword:
        default: Password
      TanzuNetApiToken:
        default: API token
      TanzuNetRelocateImages:
        default: Relocate TAP images
      TAPVersion:
        default: Version
      SampleAppName:
        default: Name
      QSS3BucketName:
        default: Name
      QSS3BucketRegion:
        default: Region
      QSS3KeyPrefix:
        default: Key prefix
Parameters:
  AcceptEULAs:
    Type: String
    Description: >-
      Choose 'Yes' if you have already accepted the following
      VMware Tanzu Network end-user license agreements (EULAs) listed in:
      https://aws-quickstart.github.io/quickstart-vmware-tanzu-application-platform/#_eulas.
      TAP will fail to install successfully if the listed EULAs have not been
      accepted for the specified VMware Tanzu Network user account.
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'No'
  AcceptCEIP:
    Type: String
    Description: >-
      Choose 'Yes' if you have read and accept the VMware customer experience
      improvement program (CEIP) policy
      (https://www.vmware.com/solutions/trustvmware/ceip.html).
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'No'
  TAPDomainName:
   Type: String
   Description: >-
     Private DNS domain name that will be used for accessing the TAP graphical
     user interface (GUI) and project URLs.
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: >-
      ID of your existing VPC (eg: vpc-0343606e).
  PublicSubnet1Id:
    Type: AWS::EC2::Subnet::Id
    Description: >-
      ID of the public subnet in Availability Zone 1 of your existing VPC
      (eg: subnet-a0246dcd).
  PrivateSubnet1Id:
    Type: AWS::EC2::Subnet::Id
    Description: >-
      ID of the private subnet in Availability Zone 1 of your existing VPC
      (eg: subnet-fe9a8b32).
  PrivateSubnet2Id:
    Type: AWS::EC2::Subnet::Id
    Description: >-
      ID of the private subnet in Availability Zone 2 of your existing VPC
      (eg: subnet-be8b01ea).
  PrivateSubnet3Id:
    Type: String
    Description: >-
      ID of the private subnet in Availability Zone 3 of your existing VPC
      (eg: subnet-abd39039).
    AllowedPattern: ^(subnet-([0-9a-f]{8}|[0-9a-f]{17})|)$
    ConstraintDescription: Must be a valid VPC subnet ID or blank.
    Default: ''
  KeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: >-
      The name of the EC2 key pair that will be used for SSH access the Linux
      bastion host / bootstrap instance and EKS cluster nodes, as well as for
      encrypting the Windows bastion host password. As of 2022-06-21, only
      RSA key types are supported due to Windows instances not supporting
      ED25519 (reference:
      https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/ec2-key-pairs.html).
  EKSClusterName:
    Type: String
    Description: >-
      The name of the EKS cluster where TAP will be deployed.
    MinLength: 1
    MaxLength: 100
    AllowedPattern: ^[0-9A-Za-z][A-Za-z0-9\-_]*
    ConstraintDescription: >-
      Minimum length of 1. Maximum length of 100. Must start with a letter or
      number.
  KubernetesVersion:
    Type: String
    Description: >-
      The version of Kubernetes control plane version to deploy. The selected
      version must be supported the selected version of TAP (reference:
      https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.1/tap/GUID-prerequisites.html#kubernetes-cluster-requirements-3).
    AllowedValues:
      - 1.21
    Default: 1.21
  NumberOfNodes:
    Type: Number
    Description: >-
      The number of nodes that will be the minimum and created for the TAP EKS
      cluster.
    MinValue: 4
    MaxValue: 450
    Default: 4
  MaxNumberOfNodes:
    Type: Number
    Description: >-
      The maximum number of nodes that will be available in an auto scaling
      scenario for the TAP EKS cluster.
    MinValue: 4
    MaxValue: 450
    Default: 6
  NodeInstanceType:
    Type: String
    Description: The EKS cluster node instance type.
    AllowedValues:
      - c4.4xlarge
      - c4.8xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c5.metal
      - c5a.2xlarge
      - c5a.4xlarge
      - c5a.8xlarge
      - c5a.12xlarge
      - c5a.16xlarge
      - c5a.24xlarge
      - c5ad.2xlarge
      - c5ad.4xlarge
      - c5ad.8xlarge
      - c5ad.12xlarge
      - c5ad.16xlarge
      - c5ad.24xlarge
      - c5d.2xlarge
      - c5d.4xlarge
      - c5d.9xlarge
      - c5d.12xlarge
      - c5d.18xlarge
      - c5d.24xlarge
      - c5d.metal
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
      - c5n.metal
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - f1.2xlarge
      - f1.4xlarge
      - f1.16xlarge
      - g3.4xlarge
      - g3.8xlarge
      - g3.16xlarge
      - g3s.xlarge
      - g4dn.xlarge
      - g4dn.2xlarge
      - g4dn.4xlarge
      - g4dn.8xlarge
      - g4dn.12xlarge
      - g4dn.16xlarge
      - g4dn.metal
      - h1.2xlarge
      - h1.4xlarge
      - h1.8xlarge
      - h1.16xlarge
      - i3.xlarge
      - i3.2xlarge
      - i3.4xlarge
      - i3.8xlarge
      - i3.16xlarge
      - i3.metal
      - i3en.xlarge
      - i3en.2xlarge
      - i3en.3xlarge
      - i3en.6xlarge
      - i3en.12xlarge
      - i3en.24xlarge
      - i3en.metal
      - inf1.2xlarge
      - inf1.6xlarge
      - inf1.24xlarge
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - m5.metal
      - m5a.xlarge
      - m5a.2xlarge
      - m5a.4xlarge
      - m5a.8xlarge
      - m5a.12xlarge
      - m5a.16xlarge
      - m5a.24xlarge
      - m5ad.xlarge
      - m5ad.2xlarge
      - m5ad.4xlarge
      - m5ad.8xlarge
      - m5ad.12xlarge
      - m5ad.16xlarge
      - m5ad.24xlarge
      - m5d.xlarge
      - m5d.2xlarge
      - m5d.4xlarge
      - m5d.8xlarge
      - m5d.12xlarge
      - m5d.16xlarge
      - m5d.24xlarge
      - m5d.metal
      - m5dn.xlarge
      - m5dn.2xlarge
      - m5dn.4xlarge
      - m5dn.8xlarge
      - m5dn.12xlarge
      - m5dn.16xlarge
      - m5dn.24xlarge
      - m5n.xlarge
      - m5n.2xlarge
      - m5n.4xlarge
      - m5n.8xlarge
      - m5n.12xlarge
      - m5n.16xlarge
      - m5n.24xlarge
      - p2.xlarge
      - p2.8xlarge
      - p2.16xlarge
      - p3.2xlarge
      - p3.8xlarge
      - p3.16xlarge
      - p3dn.24xlarge
      - r4.xlarge
      - r4.2xlarge
      - r4.4xlarge
      - r4.8xlarge
      - r4.16xlarge
      - r5.xlarge
      - r5.2xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.12xlarge
      - r5.16xlarge
      - r5.24xlarge
      - r5.metal
      - r5a.xlarge
      - r5a.2xlarge
      - r5a.4xlarge
      - r5a.8xlarge
      - r5a.12xlarge
      - r5a.16xlarge
      - r5a.24xlarge
      - r5ad.xlarge
      - r5ad.2xlarge
      - r5ad.4xlarge
      - r5ad.8xlarge
      - r5ad.12xlarge
      - r5ad.16xlarge
      - r5ad.24xlarge
      - r5d.xlarge
      - r5d.2xlarge
      - r5d.4xlarge
      - r5d.8xlarge
      - r5d.12xlarge
      - r5d.16xlarge
      - r5d.24xlarge
      - r5d.metal
      - r5dn.xlarge
      - r5dn.2xlarge
      - r5dn.4xlarge
      - r5dn.8xlarge
      - r5dn.12xlarge
      - r5dn.16xlarge
      - r5dn.24xlarge
      - r5n.xlarge
      - r5n.2xlarge
      - r5n.4xlarge
      - r5n.8xlarge
      - r5n.12xlarge
      - r5n.16xlarge
      - r5n.24xlarge
      - t2.xlarge
      - t2.2xlarge
      - t3.xlarge
      - t3.2xlarge
      - t3a.xlarge
      - t3a.2xlarge
      - x1.16xlarge
      - x1.32xlarge
      - x1e.xlarge
      - x1e.2xlarge
      - x1e.4xlarge
      - x1e.8xlarge
      - x1e.16xlarge
      - x1e.32xlarge
      - z1d.xlarge
      - z1d.2xlarge
      - z1d.3xlarge
      - z1d.6xlarge
      - z1d.12xlarge
      - z1d.metal
    ConstraintDescription: Must be a supported EC2 instance type.
    Default: m5.xlarge
  NodeVolumeSize:
    Type: Number
    Description: Size of the EKS nodes' root EBS volumes.
    MinValue: 80
    MaxValue: 16384
    Default: 80
  RemoteAccessCidr:
    Type: String
    Description: >-
      IPv4 CIDR block that will be permitted to connect to the Windows and
      Linux bastion hosts. We recommend that you set this value to a trusted
      network.
  LinuxBastionOS:
    Type: String
    Description: >-
      The operating system for the Linux bastion host / bootstrap instance.
    AllowedValues:
      - Ubuntu-Server-22.04-LTS-HVM
    Default: Ubuntu-Server-22.04-LTS-HVM
  LinuxBastionSshPort:
    Type: Number
    Description: >-
      TCP port to use for the LinuxBastion instance's listening port.
    MinValue: 0
    MaxValue: 65535
    Default: 22
  TanzuNetUsername:
    Type: String
    Description: >-
      The VMware Tanzu Network username. To create an account, sign up here:
      https://account.run.pivotal.io/z/uaa/sign-up.
    NoEcho: true
  TanzuNetPassword:
    Type: String
    Description: The VMware Tanzu Network password.
    NoEcho: true
  TanzuNetApiToken:
    Type: String
    Description: >-
      The VMware Tanzu Network user account and authentication (UAA) API
      refresh token (reference: https://network.pivotal.io/docs/api).
    NoEcho: true
  TanzuNetRelocateImages:
    Type: String
    Description: >-
      Relocate TAP images to your ECR registry from VMware Tanzu Network registry
      before attempting installation.
      If you choose not to relocate images, Tanzu Application Platform depends
      directly on VMware Tanzu Network for continued operation.
    AllowedValues:
      - 'Yes'
      - 'No'
    Default: 'No'
  TAPVersion:
    Type: String
    Description: >-
      The version of TAP to deploy. The selected version must also support the
      selected Kubernetes version (reference:
      https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.1/tap/GUID-prerequisites.html#kubernetes-cluster-requirements-3).
    AllowedValues:
      - 1.2.0
    Default: 1.2.0
  SampleAppName:
    Type: String
    Description: The sample application to deploy in your cluster.
    AllowedValues:
      - tanzu-java-web-app-workload
    Default: tanzu-java-web-app-workload
  QSS3BucketName:
    Type: String
    Description: >-
      Name of the S3 bucket for your copy of the Quick Start assets.
      Keep the default name unless you are customizing the template.
      Changing the name updates code references to point to a new Quick
      Start location. This name can include numbers, lowercase letters,
      uppercase letters, and hyphens, but do not start or end with a hyphen (-).
      See https://aws-quickstart.github.io/option1.html.
    MinLength: 3
    MaxLength: 63
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: >-
      The Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a
      hyphen (-).
    Default: aws-quickstart
  QSS3KeyPrefix:
    Type: String
    Description: >-
      S3 key prefix that is used to simulate a directory for your copy of the
      Quick Start assets. Keep the default prefix unless you are customizing
      the template. Changing this prefix updates code references to point to
      a new Quick Start location. This prefix can include numbers, lowercase
      letters, uppercase letters, hyphens (-), and forward slashes (/). End
      with a forward slash.
      See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html
      and https://aws-quickstart.github.io/option1.html.
    AllowedPattern: ^([0-9a-zA-Z-.]+/)*$
    ConstraintDescription:
      The Quick Start S3 key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/).
    Default: quickstart-vmware-tanzu-application-platform/
  QSS3BucketRegion:
    Type: String
    Description: >-
      AWS Region where the Quick Start S3 bucket (QSS3BucketName) is
      hosted. Keep the default Region unless you are customizing the template.
      Changing this Region updates code references to point to a new
      Quick Start location. When using your own bucket, specify the Region.
      See https://aws-quickstart.github.io/option1.html.
    Default: us-east-1
Mappings:
  AwsAmiRegionMap:
    af-south-1:
      US2204HVM: ami-04f0408f494c0c285
      WS2022FullBase: ami-0bc997f7008192f44
    ap-east-1:
      US2204HVM: ami-006e830ecf3449b97
      WS2022FullBase: ami-0c87318b66586dbdf
    ap-northeast-1:
      US2204HVM: ami-0a054d6fbb2cc67ee
      WS2022FullBase: ami-045926cadb8870a49
    ap-northeast-2:
      US2204HVM: ami-0818e9b70ba516e4c
      WS2022FullBase: ami-09e81229b42b8bce2
    ap-northeast-3:
      US2204HVM: ami-069f7cc82ef9ffee0
      WS2022FullBase: ami-0760c9db34f185b18
    ap-south-1:
      US2204HVM: ami-0c1d7eb198a14f4b7
      WS2022FullBase: ami-0ecc68457948da1bc
    ap-southeast-1:
      US2204HVM: ami-07dd115509093305a
      WS2022FullBase: ami-0517d4980cf75758a
    ap-southeast-2:
      US2204HVM: ami-07cba5a9c6484ecc6
      WS2022FullBase: ami-0066d7383237ba80b
    ap-southeast-3:
      US2204HVM: ami-0de46ab389596d621
      WS2022FullBase: ami-080c8096bf5726733
    ca-central-1:
      US2204HVM: ami-0204f3c59456ea9a1
      WS2022FullBase: ami-031c78e49d3c474aa
    cn-north-1:
      US2204HVM: ami-0a5b1cd4564f86427
      WS2022FullBase: ami-0c59d32872af42389
    cn-northwest-1:
      US2204HVM: ami-09fcf3b4295bfce3a
      WS2022FullBase: ami-0e0d3d43301d7fa6e
    eu-central-1:
      US2204HVM: ami-0d06de6bae4839627
      WS2022FullBase: ami-081728af240ed77f2
    eu-north-1:
      US2204HVM: ami-086a5679c50b4ff6f
      WS2022FullBase: ami-037c67c58ad5a39b8
    eu-south-1:
      US2204HVM: ami-00806d185ec911bf1
      WS2022FullBase: ami-01687f6d4ba94e20d
    eu-west-1:
      US2204HVM: ami-0c0aa81a5fab62093
      WS2022FullBase: ami-00c920ab6ef8925b9
    eu-west-2:
      US2204HVM: ami-0510e632102e49c91
      WS2022FullBase: ami-0727ea5edebc000a0
    eu-west-3:
      US2204HVM: ami-0c29d914e1049d227
      WS2022FullBase: ami-04163e35519631bc7
    me-south-1:
      US2204HVM: ami-02065623a94764b7c
      WS2022FullBase: ami-0079bcec052a1b365
    sa-east-1:
      US2204HVM: ami-0c8ba8486b94b44c3
      WS2022FullBase: ami-024a4831aa3511f47
    us-east-1:
      US2204HVM: ami-0f65ab0fd913bc7be
      WS2022FullBase: ami-0e1a729017e59e409
    us-east-2:
      US2204HVM: ami-079b3f6abda6a6372
      WS2022FullBase: ami-094a92978724fc94c
    us-gov-east-1:
      US2204HVM: ami-08fcbec75b43330b7
      WS2022FullBase: ami-0365c8f2a839fefed
    us-gov-west-1:
      US2204HVM: ami-04e77113f128920b2
      WS2022FullBase: ami-0cc7aa87fbd1c3837
    us-west-1:
      US2204HVM: ami-08daca4640726cc73
      WS2022FullBase: ami-0397c20f71a12873b
    us-west-2:
      US2204HVM: ami-0c21533018816e490
      WS2022FullBase: ami-0280d580c37d161bf
  AwsAmiNameMap:
    Ubuntu-Server-22.04-LTS-HVM:
    # Official AMI names are:
    # Commercial: 'ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220616'
    # GovCloud: 'ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220420'
    # Greater China Region: 'ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220604'
    # Alternative: Ubuntu Server lookup: https://cloud-images.ubuntu.com/locator/ec2/
      Code: US2204HVM
      OS: Ubuntu
    Windows-Server-2022-English-Full-Base-2022.06.15:
    # Official AMI name is 'Windows_Server-2022-English-Full-Base-2022.06.15'
      Code: WS2022FullBase
      OS: Windows
  TanzuNetRegistryServer:
    Server:
      Name: registry.tanzu.vmware.com
  KubernetesVersion:
  # https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html
    '1.21':
      AwsKubectlVersion: 1.22.6/2022-03-09
  TAPVersion:
    1.2.0:
      ClusterEssentialsBundleVersion: 1.1.0
  ClusterEssentialsBundle:
    1.1.0:
      FileHash: sha256:ab0a3539da241a6ea59c75c0743e9058511d7c56312ea3906178ec0f3491f51d
      FileId: 1191987
  SampleAppProperties:
    Namespace:
      Name: tap-workload
    OotbRepoPrefix:
      Name: tap-supply-chain
  SampleAppConfig:
    tanzu-java-web-app-workload:
      Config: |
        apiVersion: carto.run/v1alpha1
        kind: Workload
        metadata:
          name: tanzu-java-web-app-workload
          labels:
            apps.tanzu.vmware.com/workload-type: web
            app.kubernetes.io/part-of: tanzu-java-web-app
            apps.tanzu.vmware.com/has-tests: true
        spec:
          params:
            - name: annotations
              value:
                autoscaling.knative.dev/minScale: "1"
          source:
            git:
              url: https://github.com/sample-accelerators/tanzu-java-web-app
              ref:
                branch: main
Conditions:
  3AZDeployment: !Not [!Equals [!Ref PrivateSubnet3Id, '']]
  Ubuntu: !Equals [!FindInMap [AwsAmiNameMap, !Ref LinuxBastionOS, OS], Ubuntu]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, aws-quickstart]
Resources:
  TanzuNetSecretCredentials:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub
        - '${StackId}/TanzuNetCredentials'
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      Description: The VMware Tanzu Network credentials.
      SecretString: !Sub >-
        {
          "username": "${TanzuNetUsername}",
          "password": "${TanzuNetPassword}",
          "token": "${TanzuNetApiToken}"
        }
  TAPPackagesRepo:
    Type: AWS::ECR::Repository
    # TODO: Flip back to delete if/when possible for CloudFormation to delete
    # ECR repos with images.
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      RepositoryName: !Sub
        - '${StackId}/tanzu-application-platform/tap-packages'
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      EncryptionConfiguration:
        EncryptionType: AES256
  TAPClusterEssentialsBundleRepo:
    Type: AWS::ECR::Repository
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      RepositoryName: !Sub
        - '${StackId}/tanzu-cluster-essentials/bundle'
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      EncryptionConfiguration:
        EncryptionType: AES256
  TAPBuildServiceRepo:
    Type: AWS::ECR::Repository
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      RepositoryName: !Sub
        - '${StackId}/tap-build-service'
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      EncryptionConfiguration:
        EncryptionType: AES256
  TAPWorkloadRepo:
    Type: AWS::ECR::Repository
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      RepositoryName: !Sub
        - '${StackId}/${Prefix}/${Suffix}'
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
          Prefix: !FindInMap [SampleAppProperties, OotbRepoPrefix, Name]
          Suffix: !Sub
            - '${SampleAppName}-${Namespace}'
            - Namespace: !FindInMap [SampleAppProperties, Namespace, Name]
      EncryptionConfiguration:
        EncryptionType: AES256
  TAPWorkloadBundleRepo:
    Type: AWS::ECR::Repository
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      RepositoryName: !Sub
        - '${StackId}/${Prefix}/${Suffix}-bundle'
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
          Prefix: !FindInMap [SampleAppProperties, OotbRepoPrefix, Name]
          Suffix: !Sub
            - '${SampleAppName}-${Namespace}'
            - Namespace: !FindInMap [SampleAppProperties, Namespace, Name]
      EncryptionConfiguration:
        EncryptionType: AES256
  PrivateHostedZone:
    Type: AWS::Route53::HostedZone
    DeletionPolicy: Delete
    Properties:
      HostedZoneConfig:
        Comment: VMware Tanzu Application Platform hosted zone
      Name: !Ref TAPDomainName
      VPCs:
        - VPCId: !Ref VpcId
          VPCRegion: !Ref AWS::Region
  PlaceholderDnsRecord:
  # The value of this record will be updated during the installation process
    Type: AWS::Route53::RecordSet
    UpdateReplacePolicy: Retain
    DeletionPolicy: Delete
    Properties:
      Type: CNAME
      Name: !Sub '*.${TAPDomainName}'
      HostedZoneId: !Ref PrivateHostedZone
      Comment: VMware Tanzu Application Platform wildcard record
      TTL: 60
      ResourceRecords:
        - tap-gui.localdomain
  EKSAdvancedConfigStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-eks/templates/amazon-eks-advanced-configuration.template.yaml
        - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
          S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
      Parameters:
        ConfigSetName: !Ref AWS::StackName
        NodeVolumeSize: !Ref NodeVolumeSize
        KubernetesVersion: !Ref KubernetesVersion
  EKSQSStack:
    Type: AWS::CloudFormation::Stack
    DependsOn:
      - EKSAdvancedConfigStack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-eks/templates/amazon-eks-entrypoint-existing-vpc.template.yaml
        - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
          S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
      Parameters:
        ConfigSetName: !Ref AWS::StackName
        VPCID: !Ref VpcId
        PrivateSubnet1ID: !Ref PrivateSubnet1Id
        PrivateSubnet2ID: !Ref PrivateSubnet2Id
        PrivateSubnet3ID: !If
          - 3AZDeployment
          - !Ref PrivateSubnet3Id
          - !Ref AWS::NoValue
        RemoteAccessCIDR: !Ref RemoteAccessCidr
        EKSPublicAccessEndpoint: Disabled
        AdditionalEKSAdminRoleArn: !GetAtt LinuxBastionIamRole.Arn
        KeyPairName: !Ref KeyPairName
        NumberOfNodes: !Ref NumberOfNodes
        MaxNumberOfNodes: !Ref MaxNumberOfNodes
        NodeInstanceType: !Ref NodeInstanceType
        NodeInstanceFamily: Standard
        NodeGroupType: Managed
        NodeGroupOS: Amazon Linux 2
        EKSClusterName: !Ref EKSClusterName
        ClusterAutoScaler: Enabled
        ProvisionBastionHost: Disabled
        SnykIntegration: Disabled
        NewRelicIntegration: Disabled
        CalicoIntegration: Disabled
        RafaySysIntegration: Disabled
        GrafanaIntegration: Disabled
        PrometheusIntegration: Disabled
        VaultIntegration: Disabled
        ConsulIntegration: Disabled
        RancherIntegration: Disabled
        MonitoringStack: None
        ALBIngressController: Enabled
        EfsStorageClass: Disabled
  TAPLogGroup:
    Type: AWS::Logs::LogGroup
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub
        - /aws/quickstart/vmware-tanzu-application-platform/${StackId}
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
  LinuxBastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: >-
        The TAP Linux bastion host / bootstrap instance security group.
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: TAPLinuxBastionSecurityGroup
        - Key: Description
          Value: >-
            The VMware Tanzu Application Platform Linux bastion host /
            bootstrap instance security group.
  LinuxBastionSshIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Description: Allow SSH to the Linux bastion host / bootstrap instance.
      GroupId: !Ref LinuxBastionSecurityGroup
      IpProtocol: tcp
      FromPort: !Ref LinuxBastionSshPort
      ToPort: !Ref LinuxBastionSshPort
      CidrIp: !Ref RemoteAccessCidr
  LinuxBastionDefaultEgressRule:
    Type: AWS::EC2::SecurityGroupEgress
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Description: Allow all egress.
      GroupId: !Ref LinuxBastionSecurityGroup
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      CidrIp: 0.0.0.0/0
  LinuxBastionSshToNodesEgressRule:
    Type: AWS::EC2::SecurityGroupEgress
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Description: >-
        Allow SSH from the Linux bastion host / bootstrap instance to the EKS
        nodes.
      GroupId: !Ref LinuxBastionSecurityGroup
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      DestinationSecurityGroupId: !GetAtt EKSQSStack.Outputs.NodeGroupSecurityGroup
  NodesSshIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Description: >-
        Allow SSH from the Linux bastion host / bootstrap instance to the EKS
        nodes.
      GroupId: !GetAtt EKSQSStack.Outputs.NodeGroupSecurityGroup
      IpProtocol: tcp
      ToPort: 22
      FromPort: 22
      SourceSecurityGroupId: !Ref LinuxBastionSecurityGroup
  LinuxBastionK8sToApiEgressRule:
    Type: AWS::EC2::SecurityGroupEgress
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Description: >-
        Allow the Linux bastion host / bootstrap instance to connect to the EKS
        control plane for Kubernetes API traffic.
      GroupId: !Ref LinuxBastionSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      DestinationSecurityGroupId: !GetAtt EKSQSStack.Outputs.ControlPlaneSecurityGroup
  EKSControlPlaneApiIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      Description: >-
        Allow the Linux bastion host / bootstrap instance to connect to the EKS
        control plane for Kubernetes API traffic.
      GroupId: !GetAtt EKSQSStack.Outputs.ControlPlaneSecurityGroup
      IpProtocol: tcp
      ToPort: 443
      FromPort: 443
      SourceSecurityGroupId: !Ref LinuxBastionSecurityGroup
  LinuxBastionEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: TAPLinuxBastionEIP
  LinuxBastionIamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub
        - TAPLinuxBastionIamRole-${StackId}
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      Description: Linux bastion host / bootstrap instance IAM Role.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub ec2.${AWS::URLSuffix}
            Action: sts:AssumeRole
      Policies:
        - PolicyName: TAPBootstrapInstanceConfig
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: ListAllEksClusters
                Effect: Allow
                Action: eks:ListClusters
                Resource: !Sub arn:${AWS::Partition}:eks:${AWS::Region}:${AWS::AccountId}:cluster/*
              - Sid: ManageTapEksCluster
                Effect: Allow
                Action:
                  - eks:ListAddons
                  - eks:ListFargateProfiles
                  - eks:ListIdentityProviderConfigs
                  - eks:ListNodegroups
                  - eks:ListUpdates
                  - eks:AccessKubernetesApi
                  - eks:DescribeAddonVersions
                  - eks:DescribeCluster
                  - eks:DescribeNodegroup
                Resource: !Sub arn:${AWS::Partition}:eks:${AWS::Region}:${AWS::AccountId}:cluster/${EKSClusterName}
              - Sid: DescribeEksAddons
                Effect: Allow
                Action:
                  - eks:DescribeAddon
                Resource: !Sub arn:${AWS::Partition}:eks:${AWS::Region}:${AWS::AccountId}:addon/*/*/*
              - Sid: ManageTapEcrRepos
                Effect: Allow
                Action:
                  - ecr:DescribeImages
                  - ecr:ListImages
                  - ecr:BatchCheckLayerAvailability
                  - ecr:BatchGetImage
                  - ecr:DescribeRepositories
                  - ecr:GetDownloadUrlForLayer
                  - ecr:CompleteLayerUpload
                  - ecr:InitiateLayerUpload
                  - ecr:PutImage
                  - ecr:UploadLayerPart
                Resource:
                  - !GetAtt TAPPackagesRepo.Arn
                  - !GetAtt TAPClusterEssentialsBundleRepo.Arn
                  - !GetAtt TAPBuildServiceRepo.Arn
                  - !GetAtt TAPWorkloadRepo.Arn
                  - !GetAtt TAPWorkloadBundleRepo.Arn
              - Sid: DescribeEcrPrivateRegistryAndGetAuthToken
                Effect: Allow
                Action:
                  - ecr:DescribeRegistry
                  - ecr:GetAuthorizationToken
                Resource: '*'
              - Sid: ListIamRoles
                Effect: Allow
                Action: iam:ListRoles
                Resource: '*'
              - Sid: ManageTapSecrets
                Effect: Allow
                Action:
                  - secretsmanager:DescribeSecret
                  - secretsmanager:GetResourcePolicy
                  - secretsmanager:GetSecretValue
                  - secretsmanager:ListSecretVersionIds
                  - secretsmanager:PutSecretValue
                Resource: !Ref TanzuNetSecretCredentials
              - Sid: ListSecretsAndGetRandomPassword
                Effect: Allow
                Action:
                  - secretsmanager:GetRandomPassword
                  - secretsmanager:ListSecrets
                Resource: '*'
              - Sid: ListRoute53HostedZones
                Effect: Allow
                Action:
                  - route53:ListHostedZones
                  - route53:ListHostedZonesByName
                Resource: '*'
              - Sid: ManageTapRoute53HostedZoneRecordSets
                Effect: Allow
                Action:
                  - route53:ListResourceRecordSets
                  - route53:ChangeResourceRecordSets
                Resource: !Sub arn:${AWS::Partition}:route53:::hostedzone/${PrivateHostedZone.Id}
              - Sid: ManageCloudWatchLogs
                Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:GetLogEvents
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - logs:PutMetricFilter
                  - logs:PutRetentionPolicy
                Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:*:*
              - Sid: GetQSS3BucketObjects
                Effect: Allow
                Action: s3:GetObject
                Resource: !Sub
                  - arn:${AWS::Partition}:s3:::${S3Bucket}/${QSS3KeyPrefix}*
                  - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
              - Sid: ListAllS3Buckets
                Effect: Allow
                Action: s3:ListAllMyBuckets
                Resource: !Sub arn:${AWS::Partition}:s3:::*
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
        - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy
  LinuxBastionInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub
        - TAPLinuxBastionInstanceProfile-${StackId}
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      Roles:
        - !Ref LinuxBastionIamRole
  TAPBuildServiceIAMRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub
          - TAPBuildServiceIAMRole-${StackId}
          - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
        Description: >-
          VMware Tanzu Application Platform role to allow Tanzu Build Service
          to write to ECR
        AssumeRolePolicyDocument: !Sub
                - |
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": "${IamOidcProviderArn}"
                            },
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Condition": {
                                "StringEquals": {
                                    "${OidcProviderEndpoint}:aud": "sts.amazonaws.com"
                                },
                                "StringLike": {
                                    "${OidcProviderEndpoint}:sub": [
                                      "system:serviceaccount:kpack:controller",
                                      "system:serviceaccount:build-service:dependency-updater-controller-serviceaccount" ]
                                }
                            }
                        }
                    ]
                  }
                - IamOidcProviderArn: !Join
                    - ''
                    - - 'arn:aws:iam::'
                      - !Ref AWS::AccountId
                      - ':oidc-provider/'
                      - !Select [1, !Split ["//", !GetAtt EKSQSStack.Outputs.OIDCIssuerURL]]
                  OidcProviderEndpoint: !Select [1, !Split ["//", !GetAtt EKSQSStack.Outputs.OIDCIssuerURL]]
        Policies:
          - PolicyName: TapECRBuildService
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Sid: GetAuthTokenAndAssumeRole
                  Effect: Allow
                  Action: 
                    - ecr-public:GetAuthorizationToken
                    - ecr:GetAuthorizationToken
                    - sts:AssumeRoleWithWebIdentity
                  Resource: '*'
                - Sid: TapECRBuildService
                  Effect: Allow
                  Action:
                    - ecr:*
                    - ecr-public:*
                  Resource:
                    - !GetAtt TAPBuildServiceRepo.Arn
                    - !GetAtt TAPPackagesRepo.Arn
  TAPdemoworkloadIAMRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: !Sub
          - TAPdemoworkloadIAMRole-${StackId}
          - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
        Description: >-
          VMware Tanzu Application Platform role to create a demo workload
        AssumeRolePolicyDocument: !Sub
                - |
                  {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Federated": "${IamOidcProviderArn}"
                            },
                            "Action": "sts:AssumeRoleWithWebIdentity",
                            "Condition": {
                                "StringEquals": {
                                    "${OidcProviderEndpoint}:aud": "sts.amazonaws.com",
                                    "${OidcProviderEndpoint}:sub": "system:serviceaccount:tap-workload:default"
                                }
                            }
                        }
                    ]
                  }
                - IamOidcProviderArn: !Join
                    - ''
                    - - 'arn:aws:iam::'
                      - !Ref AWS::AccountId
                      - ':oidc-provider/'
                      - !Select [1, !Split ["//", !GetAtt EKSQSStack.Outputs.OIDCIssuerURL]]
                  OidcProviderEndpoint: !Select [1, !Split ["//", !GetAtt EKSQSStack.Outputs.OIDCIssuerURL]]
        Policies:
          - PolicyName: TapECRWorkload
            PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Sid: TapECRWorkload
                  Effect: Allow
                  Action:
                    - ecr:UploadLayerPart
                    - ecr:BatchCheckLayerAvailability
                    - ecr:CompleteLayerUpload
                    - ecr:InitiateLayerUpload
                    - ecr:PutImage
                    - ecr:GetAuthorizationToken
                    - ecr:GetDownloadUrlForLayer
                    - ecr:BatchGetImage
                    - sts:AssumeRoleWithWebIdentity
                    - ecr-public:UploadLayerPart
                    - ecr-public:BatchCheckLayerAvailability
                    - ecr-public:CompleteLayerUpload
                    - ecr-public:InitiateLayerUpload
                    - ecr-public:PutImage
                    - ecr-public:GetAuthorizationToken
                  Resource: '*'
  UbuntuBastion:
  # TODO: Implement CloudFormation helper scripts once Ubuntu 22.04 is
  # supported.
    Type: AWS::EC2::Instance
    Condition: Ubuntu
    Properties:
      InstanceType: m5.large
      IamInstanceProfile: !Ref LinuxBastionInstanceProfile
      ImageId: !FindInMap
        - AwsAmiRegionMap
        - !Ref AWS::Region
        - !FindInMap [AwsAmiNameMap, !Ref LinuxBastionOS, Code]
      KeyName: !Ref KeyPairName
      Monitoring: true
      SecurityGroupIds:
        - !Ref LinuxBastionSecurityGroup
      SubnetId: !Ref PublicSubnet1Id
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 50
            VolumeType: gp2
            Encrypted: true
            DeleteOnTermination: true
      Tags:
        - Key: Name
          Value: TAPLinuxBastionInstance
        - Key: Description
          Value: >-
            VMware Tanzu Application Platform EKS cluster bootstrap instance.
      UserData:
        Fn::Base64: !Sub
          - |
            #!/bin/bash
            set -xe
            user=ubuntu
            arch=$(dpkg --print-architecture)
            uname=$(uname -m)
            tap_dir=/home/$user/tap-setup-scripts
            cat <<EOF >> /etc/environment
            AWS_REGION=${AWS::Region}
            AWS_DEFAULT_REGION=${AWS::Region}
            EOF
            set -a
            source /etc/environment
            echo "Removing built-in Docker..."
            apt-get -y remove containerd runc
            echo "Adding Docker CE repo..."
            mkdir -p /usr/local/share/keyrings/
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg |
              gpg --dearmor -o /usr/local/share/keyrings/docker-archive-keyring.gpg --yes
            printf "deb [arch=$arch signed-by=/usr/local/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" |
              tee /etc/apt/sources.list.d/docker.list
            echo "Updating & upgrading..."
            apt-get -y update
            apt-get -y upgrade
            echo "Installing system dependencies..."
            apt-get -y install amazon-ecr-credential-helper ca-certificates containerd.io curl docker-ce \
              docker-ce-cli docker-compose-plugin git gnupg gnupg2 jq lsb-release openssl pass perl python3-pip \
              python3-setuptools sed sudo traceroute unzip uuid-runtime vim wget
            echo "Installing aws cli..."
            pushd /tmp
            wget -O "./awscliv2.zip" "https://awscli.amazonaws.com/awscli-exe-linux-$uname.zip"
            unzip ./awscliv2.zip
            ./aws/install
            popd
            echo "Installing python dependencies for $user..."
            su - $user -c "mkdir -p /home/$user/.local/bin; source /home/$user/.profile; python3 -m pip install --upgrade pip setuptools wheel yq"
            echo "Updating certificate authority certificates..."
            update-ca-certificates
            echo "Installing Amazon CloudWatch agent..."
            mkdir -p /opt/aws/amazon-cloudwatch-agent/etc/
            cat <<EOF >> /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json
            {
              "metrics": {
                "append_dimensions": {
                  "ImageId": "\${!aws:ImageId}",
                  "InstanceId": "\${!aws:InstanceId}",
                  "InstanceType": "\${!aws:InstanceType}"
                },
                "metrics_collected": {
                  "mem": {
                    "measurement": [
                      "mem_used_percent"
                    ]
                  },
                  "swap": {
                    "measurement": [
                      "swap_used_percent"
                    ]
                  }
                }
              },
              "logs": {
                "logs_collected": {
                  "files": {
                    "collect_list": [
                      {
                        "file_path": "/var/log/cloud-init-output.log",
                        "log_group_name": "${TAPLogGroup}",
                        "log_stream_name": "{instance_id}_/var/log/cloud-init-output.log"
                      }
                    ]
                  }
                }
              }
            }
            EOF
            pushd /tmp
            aws s3 cp --no-progress "s3://amazoncloudwatch-agent-${AWS::Region}/ubuntu/$arch/latest/amazon-cloudwatch-agent.deb" ./amazon-cloudwatch-agent.deb
            dpkg -i ./amazon-cloudwatch-agent.deb
            popd
            /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json -s
            systemctl enable amazon-cloudwatch-agent.service
            systemctl start amazon-cloudwatch-agent.service
            systemctl status amazon-cloudwatch-agent.service
            echo "Installing kubectl..."
            pushd /tmp
            aws s3 cp --no-progress "s3://amazon-eks/${AwsKubectlVersion}/bin/linux/$arch/kubectl" ./kubectl
            aws s3 cp --no-progress "s3://amazon-eks/${AwsKubectlVersion}/bin/linux/$arch/kubectl.sha256" ./kubectl.sha256
            openssl sha1 -sha256 ./kubectl
            chmod 755 ./kubectl
            mv ./kubectl /usr/local/bin/
            kubectl completion bash > /etc/bash_completion.d/kubectl
            su - $user -c "aws eks update-kubeconfig --name ${EKSQSStack.Outputs.EKSClusterName}"
            popd
            echo "Configuring Docker..."
            getent group docker || groupadd docker
            usermod -aG docker $user
            mkdir -p /root/.docker
            su - $user -c "mkdir -p /home/$user/.docker"
            pushd /tmp
            curl -fsSL "https://github.com/docker/docker-credential-helpers/releases/download/v${DockerCredPassVersion}/docker-credential-pass-v${DockerCredPassVersion}-$arch.tar.gz" | tar xz -C .
            mv docker-credential-pass /usr/local/bin/
            popd
            cat <<EOF > /root/.docker/config.json
            {
              "credHelpers": {
                "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com": "ecr-login",
                "public.ecr.aws": "ecr-login"
              }
            }
            EOF
            cp /root/.docker/config.json /home/$user/.docker/
            chown $user:$user /home/$user/.docker/config.json
            echo "Configuring the SSH listening port..."
            printf "Port ${LinuxBastionSshPort}\n" > /etc/ssh/sshd_config.d/port.conf
            systemctl restart sshd.service
            systemctl status sshd.service
            echo "Downloading the VMware Tanzu Application Platform Quick Start scripts..."
            su - $user -c "mkdir -p \"$tap_dir/downloads\" \"$tap_dir/generated\" \"$tap_dir/src/inputs\" \"$tap_dir/src/resources\""
            pushd "$tap_dir/src"
            aws s3 cp --no-progress "${QSS3BucketPath}/src/tap-main.sh" ./tap-main.sh
            chmod +x ./tap-main.sh
            aws s3 cp --no-progress "${QSS3BucketPath}/src/install-tools.sh" ./install-tools.sh
            chmod +x ./install-tools.sh
            aws s3 cp --no-progress "${QSS3BucketPath}/src/functions.sh" ./functions.sh
            popd
            pushd "$tap_dir/src/inputs"
            aws s3 cp --no-progress "${QSS3BucketPath}/src/inputs/tap-values.yaml" ./tap-values.yaml
            cat <<EOF > ./user-input-values.yaml
            #@data/values
            ---
            tanzunet:
              server: ${TanzuNetRegistryServer}
              relocate_images: "${TanzuNetRelocateImages}"
              secrets:
                credentials_arn: ${TanzuNetSecretCredentials}
            cluster_essentials_bundle:
              bundle: ${TanzuNetRegistryServer}/${ClusterEssentialsBundleRepo}
              file_hash: ${ClusterEssentialsBundleFileHash}
              version: ${ClusterEssentialsBundleVersion}
              file_id: ${ClusterEssentialsBundleFileId}
            tap:
              name: tap
              namespace: tap-install
              repository: ${TanzuNetRegistryServer}/${TAPRepo}
              version: ${TAPVersion}
            cluster:
              name: ${EKSQSStack.Outputs.EKSClusterName}
            buildservice:
              buildservice_arn: ${TAPBuildServiceIAMRole.Arn}
            dns:
              domain_name: ${TAPDomainName}
              zone_id: ${PrivateHostedZone.Id}
            repositories:
              tap_packages: ${TAPPackagesRepo.RepositoryUri}
              cluster_essentials: ${TAPClusterEssentialsBundleRepo.RepositoryUri}
              build_service: ${TAPBuildServiceRepo.RepositoryUri}
              workload:
                name: ${SampleAppName}
                namespace: ${SampleAppNamespace}
                repository: ${TAPWorkloadRepo.RepositoryUri}
                bundle_repository: ${TAPWorkloadBundleRepo.RepositoryUri}
                arn: ${TAPdemoworkloadIAMRole.Arn}
            EOF
            popd
            pushd "$tap_dir/src/resources"
            aws s3 cp --no-progress "${QSS3BucketPath}/src/resources/developer-namespace.yaml" ./developer-namespace.yaml
            aws s3 cp --no-progress "${QSS3BucketPath}/src/resources/git-ssh-basic-auth.yaml" ./git-ssh-basic-auth.yaml
            aws s3 cp --no-progress "${QSS3BucketPath}/src/resources/pipeline.yaml" ./pipeline.yaml
            aws s3 cp --no-progress "${QSS3BucketPath}/src/resources/scan-policy.yaml" ./scan-policy.yaml
            cat <<EOF > ./workload-aws.yaml
            ${SampleAppConfig}
            EOF
            popd
            chown -R $user:$user "$tap_dir"
            echo "Installing pivnet CLI..."
            wget -O "$tap_dir/downloads/pivnet" "https://github.com/pivotal-cf/pivnet-cli/releases/download/v${PivNetVersion}/pivnet-linux-$(dpkg --print-architecture)-${PivNetVersion}"
            install -o $user -g $user -m 0755 "$tap_dir/downloads/pivnet" /usr/local/bin/pivnet
            echo "Installing tanzu CLI and staging tanzu-cluster-essentials..."
            su - $user -c "$tap_dir/src/install-tools.sh"
            echo TanzuNetRelocateImages ${TanzuNetRelocateImages}
            if [[ "${TanzuNetRelocateImages}" == "Yes" ]]
            then
              echo "Creating local copies of key TAP container repos per VMware best practices..."
              su - $user -c "$tap_dir/src/tap-main.sh -c relocate"
            fi
            echo "Installing Tanzu Application Platform..."
            su - $user -c "$tap_dir/src/tap-main.sh -c install"
            echo "Completed successfully!"
          - AwsKubectlVersion: !FindInMap [KubernetesVersion, !Ref KubernetesVersion, AwsKubectlVersion]
            ClusterEssentialsBundleRepo: tanzu-cluster-essentials/cluster-essentials-bundle
            ClusterEssentialsBundleFileHash: !FindInMap [ClusterEssentialsBundle, !FindInMap [TAPVersion, !Ref TAPVersion, ClusterEssentialsBundleVersion], FileHash]
            ClusterEssentialsBundleFileId: !FindInMap [ClusterEssentialsBundle, !FindInMap [TAPVersion, !Ref TAPVersion, ClusterEssentialsBundleVersion], FileId]
            ClusterEssentialsBundleVersion: !FindInMap [TAPVersion, !Ref TAPVersion, ClusterEssentialsBundleVersion]
            DockerCredPassVersion: 0.6.4
            PivNetVersion: 3.0.1
            SampleAppConfig: !FindInMap [SampleAppConfig, !Ref SampleAppName, Config]
            SampleAppNamespace: !FindInMap [SampleAppProperties, Namespace, Name]
            QSS3BucketPath: !Sub
              - s3://${S3Bucket}/${QSS3KeyPrefix}tap-setup-scripts
              - S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
            TanzuNetRegistryServer: !FindInMap [TanzuNetRegistryServer, Server, Name]
            TAPRepo: tanzu-application-platform/tap-packages
  UbuntuBastionEipAssociation:
    Type: AWS::EC2::EIPAssociation
    UpdateReplacePolicy: Delete
    Condition: Ubuntu
    Properties:
      InstanceId: !Ref UbuntuBastion
      AllocationId: !GetAtt LinuxBastionEIP.AllocationId
  WindowsBastionEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: TAPWindowsBastionEIP
  WindowsBastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Windows bastion host security group.
      VpcId: !Ref VpcId
      Tags:
        - Key: Name
          Value: TAPWindowsBastionSecurityGroup
        - Key: Description
          Value: >-
            Windows bastion security group for accessing the
            VMware Tanzu Application Platform cluster GUI.
  WindowsBastionRdpIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      Description: Allow RDP to bastion host
      GroupId: !Ref WindowsBastionSecurityGroup
      IpProtocol: tcp
      FromPort: 3389
      ToPort: 3389
      CidrIp: !Ref RemoteAccessCidr
  WindowsBastionDefaultEgressRule:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      Description: Windows bastion host default egress
      GroupId: !Ref WindowsBastionSecurityGroup
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      CidrIp: 0.0.0.0/0
  WindowsBastionIamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub
        - TAPWindowsBastionIamRole-${StackId}
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      Description: Windows bastion host IAM Role.
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: !Sub ec2.${AWS::URLSuffix}
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonEC2RoleforSSM
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore
        - !Sub arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy
  WindowsBastionInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub
        - TAPWindowsBastionInstanceProfile-${StackId}
        - StackId: !Select [2, !Split [/, !Ref AWS::StackId]]
      Roles:
        - !Ref WindowsBastionIamRole
  WindowsBastion:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.medium
      IamInstanceProfile: !Ref WindowsBastionInstanceProfile
      ImageId: !FindInMap [AwsAmiRegionMap, !Ref AWS::Region, WS2022FullBase]
      KeyName: !Ref KeyPairName
      SecurityGroupIds:
        - !Ref WindowsBastionSecurityGroup
      SubnetId: !Ref PublicSubnet1Id
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeSize: 80
            VolumeType: gp2
      Tags:
        - Key: Name
          Value: TAPWindowsBastionInstance
        - Key: Description
          Value: >-
            Windows bastion instance for accessing the
            VMware Tanzu Application Platform cluster graphical user interface
            (GUI).
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          Write-Host -Object 'Setting AWS Region environment variables...'
          [System.Environment]::SetEnvironmentVariable('AWS_REGION','${AWS::Region}',[System.EnvironmentVariableTarget]::System)
          [System.Environment]::SetEnvironmentVariable('AWS_DEFAULT_REGION','${AWS::Region}',[System.EnvironmentVariableTarget]::System)
          Write-Host -Object 'Installing Chocolatey...'
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          Invoke-Expression -Command ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          Write-Host -Object 'Installing Mozilla Firefox...'
          choco install -y Firefox
          </powershell>
  WindowsBastionEipAssociation:
    Type: AWS::EC2::EIPAssociation
    UpdateReplacePolicy: Delete
    Properties:
      InstanceId: !Ref WindowsBastion
      AllocationId: !GetAtt WindowsBastionEIP.AllocationId
Outputs:
  LinuxBastionEIP:
    Description: >-
      The public IP address of the Linux bastion host / bootstrap instance.
    Value: !Ref LinuxBastionEIP
  UbuntuBastionAZ:
    Condition: Ubuntu
    Description: >-
      The Availability Zone that the Ubuntu bastion host / bootstrap instance
      is deployed in.
    Value: !GetAtt UbuntuBastion.AvailabilityZone
  UbuntuBastionId:
    Condition: Ubuntu
    Description: >-
      The EC2 instance ID of the Ubuntu bastion host / bootstrap instance.
    Value: !Ref UbuntuBastion
  UbuntuBastionPublicDnsName:
    Condition: Ubuntu
    Description: >-
      The public DNS name of the Ubuntu bastion host / bootstrap instance.
    Value: !GetAtt UbuntuBastion.PublicDnsName
  EKSClusterName:
    Description: The Amazon EKS cluster name.
    Value: !GetAtt EKSQSStack.Outputs.EKSClusterName
  TAPGuiUrl:
    Description: >-
      The URL of the VMware Tanzu Application Platform GUI that is accessible
      from within the VPC, such as the Windows bastion instance.
    Value: !Sub http://tap-gui.${TAPDomainName}
  TAPWorkloadUrl:
    Description: >-
      The URL of the VMware Tanzu Application Platform sample workload that is
      accessible from within the VPC, such as the Windows bastion instance.
    Value: !Sub
      - http://${SampleAppName}.${Namespace}.${TAPDomainName}
      - Namespace: !FindInMap [SampleAppProperties, Namespace, Name]
  WindowsBastionAZ:
    Description: >-
      The Availability Zone that the Windows bastion instance is deployed in.
    Value: !GetAtt WindowsBastion.AvailabilityZone
  WindowsBastionId:
    Description: The instance ID of the Windows bastion instance.
    Value: !Ref WindowsBastion
  WindowsBastionEIP:
    Description: The public IP address of the Windows bastion instance.
    Value: !Ref WindowsBastionEIP
  WindowsBastionPublicDnsName:
    Description: The public DNS name of the Windows bastion instance.
    Value: !GetAtt WindowsBastion.PublicDnsName
  TAPLogGroup:
    Description: >-
      The Amazon CloudWatch Logs log group where the Tanzu Application Platform
      bootstrap logs are stored.
    Value: !Ref TAPLogGroup
Rules:
  AcceptEULAs:
    Assertions:
      - Assert: !Equals [!Ref AcceptEULAs, 'Yes']
        AssertDescription: >-
          You must agree to all of the applicable VMware Tanzu Network
          end-user license agreements (EULAs) before proceeding.
  AcceptCEIP:
    Assertions:
      - Assert: !Equals [!Ref AcceptCEIP, 'Yes']
        AssertDescription: >-
          You must acknowledge that you have read and accept the VMware
          Customer Experience Improvement Program (CEIP) policy before you can
          proceed with the installation.
  TAP1.2Interop:
    RuleCondition: !Contains [[1.2.0], !Ref TAPVersion]
    Assertions:
      # The values below require quotes to force string comparison.
      - Assert: !Contains [['1.21', '1.22', '1.23'], !Ref KubernetesVersion]
        AssertDescription: >-
          The VMware Tanzu Application Platform version selection is
          incompatible with the Kubernetes version selection (reference:
          https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/1.1/tap/GUID-prerequisites.html#kubernetes-cluster-requirements-3).
